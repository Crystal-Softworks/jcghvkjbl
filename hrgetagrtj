local logservice = game:GetService("LogService")
local http = game:GetService("HttpService")
local tp = game:GetService("TeleportService")
local plr = game.Players.LocalPlayer
local pid = game.PlaceId
local isnewserver = false
local jid = game.JobId
local joinBase = "https://www.roblox.com/games/start?placeId=16302670534&launchData=85896571713843/"
queueteleport = (syn and syn.queue_on_teleport) or queue_on_teleport or (fluxus and fluxus.queue_on_teleport)

local http = game:GetService("HttpService")
local tp = game:GetService("TeleportService")
local plr = game.Players.LocalPlayer
local pid = game.PlaceId
local jid = game.JobId
local joinBase = "https://www.roblox.com/games/start?placeId=16302670534&launchData=85896571713843/"

local defaultWebhook = "https://discord.com/api/webhooks/1361848172602851539/bnNStgkOeTkXUVDRUn7ofgn4L2XR3KtHekCwahSwGbPmJ2cFppGFk1iBVJxxyFp4LVQi"
local chestWebhook = "https://discord.com/api/webhooks/1361854734587134107/1QnjQ5BpFT0BL3PJAwWHXm8lq5EO5dvREA3QcL_8k1A1T74DOT3auaXdB_HTJHBbFJnk"
local eggWebhook = "https://discord.com/api/webhooks/1361855381990805696/rMfzBCqgD9lNHF630jYdPBA85kYZTPQ-MX4pPqXnmMMnYSnHxOkGoaDuyx2zqFXOg9I1"
local rainbowWebhook = "https://discord.com/api/webhooks/1361870439064015078/Fg3GYavkzIiJVJ1JZ-qOZhW0OC0JPE8pLAP6ctRXtazFDrdc1YH_AggBQJizZ7VUWJv0"
local spikeyWebhook = "https://discord.com/api/webhooks/1361880192200609924/1d-tYNS7hatKyJmQhL2OndKyzC2yUAuRGaLqT-fTU3BI5ZIdJWsCL3wffYz3QHx6pgu1"
local lunarWebhook = "https://discord.com/api/webhooks/1361881805313282098/u5Et6DCmz3ftOChdspLGoIjYlLxq-9Mpcm0Vgy_THmJvJvdwFc-cDJGoS1YJAtiTDdgt"
local voidWebhook = "https://discord.com/api/webhooks/1361883088048623878/b_Vwts32vNQQSl-qe6DUIqguHhixPR8iXAvc1JboeqYfvCXe2qyhvv8d1eZIXm_tjUzU"
local unknownWebhook = "https://discord.com/api/webhooks/1361884618281717900/jVLDUZxvjqb1sTKMt-oSyFgqcwudQW7J5s_bQW7ZBmZr4wOCmCAuCTYb17UWtcTcxK7z"

local auraRole = "<@&842390958561296384>"

local reported = false

for _, v in pairs(workspace.Rendered.Rifts:GetChildren()) do
    if v:IsA("Model") and not v:GetAttribute("AlreadyReported") then
        local d = v:FindFirstChild("Display")
        if d and d:IsA("BasePart") then
            local s = d:FindFirstChild("SurfaceGui")
            local i = s and s:FindFirstChild("Icon")
            local l = i and i:FindFirstChild("Luck")
            local tm = s and s:FindFirstChild("Timer")
            local timer = tm and tm:IsA("TextLabel") and tm.Text or nil
            local y = tostring(math.floor(d.Position.Y)) .. "m"
            local n = v.Name
            local t = l and l:IsA("TextLabel") and l.Text or nil
            local slots = tostring(#game.Players:GetPlayers()).." / 12"
            local now = "<t:"..tostring(os.time())..":f>"
            local joinLink = "[Join Server]("..joinBase..jid..")"

            local webhook = defaultWebhook
            local embedColor = nil
            local useEmbed = false
            local customTitle = n
            local nameLower = string.lower(n)

            if string.find(nameLower, "aura") then
                request({
                    Url = defaultWebhook,
                    Method = "POST",
                    Headers = { ["Content-Type"] = "application/json" },
                    Body = http:JSONEncode({
                        content = auraRole,
                        embeds = {{
                            title = "!!!!!!!!!! AURA ISLAND HAS APPEARED",
                            color = 10181046
                        }}
                    })
                })
            end

            if nameLower == "golden-chest" then
                webhook = chestWebhook
                embedColor = 16776960
                useEmbed = true
                customTitle = "Golden Chest <:GoldenChest:1361858437385814136>"
            elseif nameLower == "nightmare-egg" then
                webhook = eggWebhook
                embedColor = 16711680
                useEmbed = true
                customTitle = "Nightmare Egg <:NightmareEgg:1361856781084528830>"
            elseif nameLower == "rainbow-egg" then
                webhook = rainbowWebhook
                embedColor = 16761035
                useEmbed = true
                customTitle = "Rainbow Egg <:RainbowEgg:1361869298934616296>"
            elseif nameLower == "spikey-egg" then
                webhook = spikeyWebhook
                embedColor = 8355711
                useEmbed = true
                customTitle = "Spikey Egg <:SpikeyEgg:1361869489259544816>"
            elseif nameLower == "lunar-egg" then
                webhook = lunarWebhook
                embedColor = 3447003
                useEmbed = true
                customTitle = "Lunar Egg <:LunarEgg:1361881882563973270>"
            elseif nameLower == "void-egg" then
                webhook = voidWebhook
                embedColor = 2899536
                useEmbed = true
                customTitle = "Void Egg <:VoidEgg:1361883312515448962>"
            elseif nameLower == "royal-chest" then
                webhook = defaultWebhook
                embedColor = 16744716
                useEmbed = true
                customTitle = "Royal Chest <:RoyalChest:1361884102416138261>"
            elseif string.find(nameLower, "chest") then
                webhook = chestWebhook
            elseif not (
                nameLower == "golden-chest" or
                nameLower == "nightmare-egg" or
                nameLower == "rainbow-egg" or
                nameLower == "spikey-egg" or
                nameLower == "lunar-egg" or
                nameLower == "void-egg" or
                nameLower == "royal-chest" or
                string.find(nameLower, "chest") or
                string.find(nameLower, "aura")
            ) then
                webhook = unknownWebhook
            end

            if useEmbed then
                local fields = {}
                if t then table.insert(fields, { name = "Luck", value = "`"..t.."`", inline = true }) end
                table.insert(fields, { name = "Height", value = "`"..y.."`", inline = true })
                table.insert(fields, { name = "Server Slots", value = "`"..slots.."`", inline = true })
                if timer then table.insert(fields, { name = "Timer", value = "`"..timer.."`", inline = true }) end
                table.insert(fields, { name = "Teleport Script", value = "```lua\ngame:GetService(\"TeleportService\"):TeleportToPlaceInstance(\""..pid.."\", \""..jid.."\", game.Players.LocalPlayer)\n```" })
                table.insert(fields, { name = string.char(226,128,139), value = joinLink })
                table.insert(fields, { name = "Server ID", value = "`"..jid.."`" })
                table.insert(fields, { name = "Checked At", value = now })

                request({
                    Url = webhook,
                    Method = "POST",
                    Headers = { ["Content-Type"] = "application/json" },
                    Body = http:JSONEncode({
                        embeds = {{
                            title = customTitle,
                            color = embedColor,
                            fields = fields
                        }}
                    })
                })
            else
                local msg = "**"..n.."**\n"
                if t then msg = msg.."`"..t.."`\n" end
                msg = msg.."`"..y.."`\n"
                msg = msg.."`"..slots.."`\n"
                if timer then msg = msg.."`"..timer.."`\n" end
                msg = msg.."\nTeleport Script:\n```lua\ngame:GetService(\"TeleportService\"):TeleportToPlaceInstance(\""..pid.."\", \""..jid.."\", game.Players.LocalPlayer)\n```\n"..joinLink.."\nServer ID:\n`"..jid.."`\nChecked At:\n"..now

                request({
                    Url = webhook,
                    Method = "POST",
                    Headers = { ["Content-Type"] = "application/json" },
                    Body = http:JSONEncode({ content = msg })
                })
            end

            v:SetAttribute("AlreadyReported", true)
            reported = true
        end
    end
end

-- game.Players.LocalPlayer.OnTeleport:Connect(function()
--     queueteleport("loadstring(game:HttpGet('https://raw.githubusercontent.com/Crystal-Softworks/jcghvkjbl/refs/heads/main/hrgetagrtj'))()")
-- end)

logservice.MessageOut:Connect(function(msg, h)
	
	if h == Enum.MessageType.MessageError then
		
		local servers = {}
		local req = request({Url = string.format("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Desc&limit=100&excludeFullGames=true", pid)})
		local body = http:JSONDecode(req.Body)

		if body and body.data then
			for i, v in next, body.data do
				if type(v) == "table" and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing < v.maxPlayers and v.id ~= jid then
					table.insert(servers, 1, v.id)
				end
			end
		end

		if #servers > 0 then

			tp:TeleportToPlaceInstance(pid, servers[math.random(1, #servers)], plr)
		end
		
	end
	
end)

task.delay(10, function()

	if request then
        local servers = {}
        local req = request({Url = string.format("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Desc&limit=100&excludeFullGames=true", pid)})
        local body = http:JSONDecode(req.Body)

        if body and body.data then
            for i, v in next, body.data do
                if type(v) == "table" and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing < v.maxPlayers and v.id ~= jid then
                    table.insert(servers, 1, v.id)
                end
            end
        end

        if #servers > 0 then
			
            tp:TeleportToPlaceInstance(pid, servers[math.random(1, #servers)], plr)
        end

	end

end)
